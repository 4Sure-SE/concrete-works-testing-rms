generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model MaterialTests {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  materialId   String    @map("material_id") @db.Uuid
  testId       String    @map("test_id") @db.Uuid
  testsPerUnit Decimal   @map("tests_per_unit") @db.Decimal(10, 4)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  materials    Materials @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tests        Tests     @relation(fields: [testId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([materialId, testId])
  @@map("material_tests")
}

model Materials {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String              @db.VarChar(225)
  description       String?             @db.VarChar(500)
  unitId            String              @map("unit_id") @db.Uuid
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamptz(6)
  materialTests     MaterialTests[]
  units             Units               @relation(fields: [unitId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projectMaterials  ProjectMaterials[]
  workItemMaterials WorkItemMaterials[]

  @@map("materials")
}

model ProjectMaterialTests {
  id                String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  testId            String           @map("test_id") @db.Uuid
  projectMaterialId String           @map("project_material_id") @db.Uuid
  onFile            Int              @default(0) @map("on_file")
  balance           Int
  createdAt         DateTime         @default(now()) @map("created_at") @db.Timestamptz(6)
  projectMaterials  ProjectMaterials @relation(fields: [projectMaterialId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tests             Tests            @relation(fields: [testId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("project_material_tests")
}

model ProjectMaterials {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  projectWorkItemId    String                 @map("project_work_item_id") @db.Uuid
  materialId           String                 @map("material_id") @db.Uuid
  quantity             Decimal                @db.Decimal(10, 2)
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  projectMaterialTests ProjectMaterialTests[]
  materials            Materials              @relation(fields: [materialId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projectWorkItems     ProjectWorkItems       @relation(fields: [projectWorkItemId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("project_materials")
}

model ProjectWorkItemTests {
  id                String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  testId            String           @map("test_id") @db.Uuid
  projectWorkItemId String           @map("project_work_item_id") @db.Uuid
  onFile            Int              @default(0) @map("on_file")
  balance           Int
  createdAt         DateTime         @default(now()) @map("created_at") @db.Timestamptz(6)
  projectWorkItems  ProjectWorkItems @relation(fields: [projectWorkItemId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tests             Tests            @relation(fields: [testId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("project_work_item_tests")
}

model ProjectWorkItems {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  projectId            String                 @map("project_id") @db.Uuid
  workItemId           String                 @map("work_item_id") @db.Uuid
  quantity             Decimal                @db.Decimal(10, 2)
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  projectMaterials     ProjectMaterials[]
  projectWorkItemTests ProjectWorkItemTests[]
  projects             Projects               @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workItems            WorkItems              @relation(fields: [workItemId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("project_work_items")
}

model Projects {
  id               String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  contractId       String             @map("contract_id") @db.VarChar(225)
  contractName     String             @map("contract_name") @db.VarChar(500)
  contractor       String             @db.VarChar(225)
  limits           String?            @db.VarChar(500)
  location         String?            @db.VarChar(225)
  dateStarted      DateTime           @map("date_started") @db.Date
  createdAt        DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  projectWorkItems ProjectWorkItems[]

  @@map("projects")
}

model Tests {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                 String                 @unique @db.VarChar(225)
  createdAt            DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  materialTests        MaterialTests[]
  projectMaterialTests ProjectMaterialTests[]
  projectWorkItemTests ProjectWorkItemTests[]
  workItemTests        WorkItemTests[]

  @@map("tests")
}

model Units {
  id           String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String      @unique @db.VarChar(50)
  abbreviation String      @unique @db.VarChar(50)
  createdAt    DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  materials    Materials[]
  workItems    WorkItems[]

  @@map("units")
}

model WorkItemMaterials {
  id              String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  workItemId      String    @map("work_item_id") @db.Uuid
  materialId      String    @map("material_id") @db.Uuid
  quantityPerUnit Decimal   @map("quantity_per_unit") @db.Decimal(10, 6)
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  materials       Materials @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workItems       WorkItems @relation(fields: [workItemId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([workItemId, materialId])
  @@map("work_item_materials")
}

model WorkItemTests {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  workItemId   String    @map("work_item_id") @db.Uuid
  testId       String    @map("test_id") @db.Uuid
  testsPerUnit Decimal   @map("tests_per_unit") @db.Decimal(10, 4)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  tests        Tests     @relation(fields: [testId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workItems    WorkItems @relation(fields: [workItemId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([workItemId, testId])
  @@map("work_item_tests")
}

model WorkItems {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  itemNo            String              @unique @map("item_no") @db.VarChar(20)
  description       String?             @db.VarChar(500)
  unitId            String              @map("unit_id") @db.Uuid
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamptz(6)
  projectWorkItems  ProjectWorkItems[]
  workItemMaterials WorkItemMaterials[]
  workItemTests     WorkItemTests[]
  units             Units               @relation(fields: [unitId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("work_items")
}

enum TestStatus {
  NOT_STARTED @map("not_started")
  ONGOING     @map("ongoing")
  COMPLETED   @map("completed")

  @@map("test_status")
}

enum TestType {
  WORK_ITEM @map("work_item")
  MATERIAL  @map("material")

  @@map("test_type")
}
